
% FACT: extract_source(source_id, source_path).
extract_source(1, 'Sentiment_NLTK.py').

% FACT: annotation(annotation_id, source_id, line_number, tag, keyword, value).
annotation(1, 1, 1, 'begin', '@BEGIN', 'Sentiment_NLTK').
annotation(2, 1, 1, 'desc', '@desc', 'Exercise YW for Analysing Tweets with NLTK').
annotation(3, 1, 2, 'in', '@IN', 'tweet.csv').
annotation(4, 1, 2, 'as', '@AS', 'TweetsinCSV').
annotation(5, 1, 2, 'uri', '@URI', 'file:tweet.csv').
annotation(6, 1, 3, 'out', '@out', 'matplotlib.pyplot').
annotation(7, 1, 3, 'as', '@as', 'plt').
annotation(8, 1, 3, 'uri', '@URI', 'file:Scores_NLTK.jpg').
annotation(9, 1, 13, 'begin', '@BEGIN', 'AccessTweets').
annotation(10, 1, 13, 'desc', '@desc', 'To read the tweets from tweet.csv file').
annotation(11, 1, 14, 'in', '@IN', 'tweet.csv').
annotation(12, 1, 14, 'as', '@AS', 'TweetsinCSV').
annotation(13, 1, 14, 'uri', '@URI', 'file:tweet.csv').
annotation(14, 1, 15, 'out', '@OUT', 'tweets_file').
annotation(15, 1, 15, 'as', '@AS', 'TweetRead').
annotation(16, 1, 19, 'end', '@END', 'AccessTweets').
annotation(17, 1, 25, 'begin', '@BEGIN', 'CountSentiments').
annotation(18, 1, 25, 'desc', '@desc', 'Calculate sentiments with NLTK').
annotation(19, 1, 26, 'in', '@IN', 'tweets_file').
annotation(20, 1, 26, 'as', '@AS', 'TweetRead').
annotation(21, 1, 27, 'out', '@OUT', 'positive').
annotation(22, 1, 27, 'as', '@AS', 'PositiveCount').
annotation(23, 1, 28, 'out', '@OUT', 'negative').
annotation(24, 1, 28, 'as', '@AS', 'NegativeCount').
annotation(25, 1, 29, 'out', '@OUT', 'neutral').
annotation(26, 1, 29, 'as', '@AS', 'NeutralCount').
annotation(27, 1, 44, 'end', '@END', 'CountSentiments').
annotation(28, 1, 46, 'begin', '@BEGIN', 'Measures').
annotation(29, 1, 46, 'desc', '@desc', 'SetPieChartMeasures').
annotation(30, 1, 47, 'in', '@IN', 'positive').
annotation(31, 1, 47, 'as', '@AS', 'PositiveCount').
annotation(32, 1, 48, 'in', '@IN', 'negative').
annotation(33, 1, 48, 'as', '@AS', 'NegativeCount').
annotation(34, 1, 49, 'in', '@IN', 'neutral').
annotation(35, 1, 49, 'as', '@AS', 'NeutralCount').
annotation(36, 1, 50, 'out', '@OUT', 'explode').
annotation(37, 1, 50, 'as', '@AS', 'Explode').
annotation(38, 1, 51, 'out', '@OUT', 'labels').
annotation(39, 1, 51, 'as', '@AS', 'Labels').
annotation(40, 1, 52, 'out', '@OUT', 'sizes').
annotation(41, 1, 52, 'as', '@AS', 'Sizes').
annotation(42, 1, 53, 'out', '@OUT', 'colors').
annotation(43, 1, 53, 'as', '@AS', 'Colors').
annotation(44, 1, 58, 'end', '@END', 'SetPieChartMeasures').
annotation(45, 1, 60, 'begin', '@BEGIN', 'DrawPieChart').
annotation(46, 1, 60, 'desc', '@desc', 'Pie chart saved in Scores_NLTK.jpeg').
annotation(47, 1, 61, 'in', '@IN', 'explode').
annotation(48, 1, 61, 'as', '@AS', 'Explode').
annotation(49, 1, 62, 'in', '@IN', 'labels').
annotation(50, 1, 62, 'as', '@AS', 'Labels').
annotation(51, 1, 63, 'in', '@IN', 'sizes').
annotation(52, 1, 63, 'as', '@AS', 'Sizes').
annotation(53, 1, 64, 'in', '@IN', 'colors').
annotation(54, 1, 64, 'as', '@AS', 'Colors').
annotation(55, 1, 65, 'out', '@out', 'matplotlib.pyplot').
annotation(56, 1, 65, 'as', '@as', 'plt').
annotation(57, 1, 65, 'uri', '@URI', 'file:Scores_NLTK.jpg').
annotation(58, 1, 71, 'end', '@END', 'DrawPieChart').
annotation(59, 1, 73, 'end', '@END', 'Sentiment_NLTK').

% FACT: annotation_qualifies(qualifying_annotation_id, primary_annotation_id).
annotation_qualifies(2, 1).
annotation_qualifies(4, 3).
annotation_qualifies(5, 3).
annotation_qualifies(7, 6).
annotation_qualifies(8, 6).
annotation_qualifies(10, 9).
annotation_qualifies(12, 11).
annotation_qualifies(13, 11).
annotation_qualifies(15, 14).
annotation_qualifies(18, 17).
annotation_qualifies(20, 19).
annotation_qualifies(22, 21).
annotation_qualifies(24, 23).
annotation_qualifies(26, 25).
annotation_qualifies(29, 28).
annotation_qualifies(31, 30).
annotation_qualifies(33, 32).
annotation_qualifies(35, 34).
annotation_qualifies(37, 36).
annotation_qualifies(39, 38).
annotation_qualifies(41, 40).
annotation_qualifies(43, 42).
annotation_qualifies(46, 45).
annotation_qualifies(48, 47).
annotation_qualifies(50, 49).
annotation_qualifies(52, 51).
annotation_qualifies(54, 53).
annotation_qualifies(56, 55).
annotation_qualifies(57, 55).
